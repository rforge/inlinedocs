
R version 2.10.0 Patched (2009-11-23 r50548)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(inlinedocs)
> ## will be run from the tests/ directory:
> test.pkg <- function(pkg){
+   package.skeleton.dx(pkg)
+   Rd.files <- Sys.glob(file.path(pkg,"man","*"))
+   ## now sort these in locale-independent manner
+   loc <- Sys.getlocale(category = "LC_COLLATE")
+   Sys.setlocale(category="LC_COLLATE","C")
+   Rd.files <- sort(Rd.files)
+   Sys.setlocale(category="LC_COLLATE",loc)
+   lapply(Rd.files,function(f)cat(paste(readLines(f),collapse="\n")))
+ }
> pkgs <- rownames(subset(file.info(dir()),isdir==TRUE))
> res <- suppressWarnings(lapply(pkgs,test.pkg))
Loading required package: reshape

Attaching package: 'ggplot2'


	The following object(s) are masked from package:grid :

	 nullGrob 

Creating directories ...
Creating DESCRIPTION ...
Creating Read-and-delete-me ...
Copying code files ...
Making help files ...
Done.
Further steps are described in './directlabels/Read-and-delete-me'.
Modifying files automatically generated by package.skeleton:
dlcompare: description item{plots} item{pos.funs} definition author title
direct.label.ggplot: description item{p} item{method} item{debug} value definition author title
need.trans.ggplot: definition description author title
position_dl: definition description author title
PositionDl: definition description author title
direct.label.trellis: description item{p} item{method} item{debug} value definition author title
dl.text: description item{labs} item{group.number} item{col.line} item{col.points} item{col} item{col.symbol} item{type} item{\dots} definition author title
need.trans: definition description author title
panel.superpose.dl: description item{x} item{y} item{subscripts} item{groups} item{panel.groups} item{method} item{.panel.superpose} item{type} item{\dots} definition author title
bottom.points: definition description author title
direct.label: description item{p} item{method} item{debug} value definition author title
dl.indep: title description item{expr} value definition author
dl.trans: title description item{\dots} value definition author
empty.grid: description item{d} item{debug} item{loc.fun} item{\dots} value definition author title
empty.grid.2: description item{d} item{debug} item{\dots} definition author title
first.points: definition description author title
get.means: definition description author title
high.points: definition description author title
label.positions: description item{x} item{y} item{subscripts} item{groups} item{debug} item{method} item{\dots} value definition author title
last.points: definition description author title
left.points: definition description author title
lines2: description item{d} item{offset} item{\dots} definition author title
low.points: definition description author title
maxvar.points: definition description author title
perpendicular.lines: description item{d} item{debug} item{\dots} value definition author title
right.points: definition description author title
rug.mean: definition description author title
top.points: definition description author title
trans.density: definition description author title
trans.densityplot: definition description author title
trans.qqmath: definition description author title
directlabels-package: title description tabular{ll} author
\name{PositionDl}
\alias{PositionDl}
\docType{data}
\title{PositionDl}
\description{Position class for direct label placement.}
\usage{PositionDl}
\format{
  The format is:
proto object 
 $ objname: chr "dl" 
 $ adjust :function (., data, scales)   
 $ new    :function (., method = NULL, debug = FALSE)   
 $ debug  : logi FALSE 
 $ method : NULL 
 parent: proto object 
 .. parent: proto object 
}
\details{
}
\source{
}
\references{
}
\examples{}\name{bottom.points}
\alias{bottom.points}
\title{bottom points}
\description{Positioning Function for the bottom of a group of points.}
\usage{
bottom.points(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{direct.label}
\alias{direct.label}
\title{direct label}
\description{Add direct labels to a plot. This is a S3 generic and there are
appropriate methods for "trellis" and "ggplot" objects.}
\usage{
direct.label(p, method = NULL, debug = FALSE)
}
\arguments{
  \item{p}{The plot to which you would like to add direct labels.}
  \item{method}{The direct label placement method as described in
?label.positions.}
  \item{debug}{Show debug output?}
}
\details{
}
\value{The plot object, with direct labels added.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{direct.label.ggplot}
\alias{direct.label.ggplot}
\title{direct label ggplot}
\description{Direct label a ggplot2 grouped plot.}
\usage{
direct.label.ggplot(p, method = NULL, debug = FALSE)
}
\arguments{
  \item{p}{The ggplot object.}
  \item{method}{Method for direct labeling as described in ?label.positions.}
  \item{debug}{Show debug output?}
}
\details{
}
\value{The ggplot object with direct labels added.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{direct.label.trellis}
\alias{direct.label.trellis}
\title{direct label trellis}
\description{Add direct labels to a grouped lattice plot. This works by parsing
the trellis object returned by the high level plot function, and
returning it with a new panel function that will plot direct
labels using the specified method.}
\usage{
direct.label.trellis(p, method = NULL, debug = FALSE)
}
\arguments{
  \item{p}{The lattice plot (result of a call to a high-level lattice
function).}
  \item{method}{Method for direct labeling as described in ?label.positions.}
  \item{debug}{Show debug output?}
}
\details{
}
\value{The lattice plot.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{directlabels-package}
\alias{directlabels-package}
\docType{package}
\title{Direct labels for plots}
\description{Direct labeling functions meant to be used with several plotting packages, including lattice and ggplot2.}
\details{
\tabular{ll}{Package: \tab directlabels\cr
Maintainer: \tab Toby Dylan Hocking <toby.hocking@inria.fr>\cr
Author: \tab Toby Dylan Hocking\cr
Version: \tab 1.0\cr
License: \tab GPL-3\cr
Title: \tab Direct labels for plots\cr
Imports: \tab proto, plyr, lattice, grid, ggplot2\cr
Depends: \tab proto, plyr, lattice, grid, ggplot2\cr
URL: \tab http://directlabels.r-forge.r-project.org/\cr
LazyLoad: \tab false\cr
LazyData: \tab true\cr
Suggests: \tab nlme, mlmRev\cr}
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\references{
}
\keyword{ package }
\seealso{
}
\examples{}\name{dl.indep}
\alias{dl.indep}
\title{Direct label groups independently}
\description{Makes a function you can use to specify the location of each group
independently.}
\usage{
dl.indep(expr)
}
\arguments{
  \item{expr}{Expression that takes a subset of the d data frame, with data from
only a single group, and returns the direct label position.}
}
\details{
}
\value{A Positioning Function.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{dl.text}
\alias{dl.text}
\title{dl text}
\description{To be used as panel.groups= argument in panel.superpose. Analyzes
arguments to determine correct text color for this group, and then
draws the direct label text.}
\usage{
dl.text(labs, group.number, col.line = NULL, col.points = NULL, col = NULL, col.symbol = NULL, type = NULL, ...)
}
\arguments{
  \item{labs}{table of labels and positions constructed by label.positions}
  \item{group.number}{which group we are currently plotting, according to levels(labs$groups)}
  \item{col.line}{line color}
  \item{col.points}{point color}
  \item{col}{general color}
  \item{col.symbol}{symbol color}
  \item{type}{plot type}
  \item{\dots}{ignored}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{dl.trans}
\alias{dl.trans}
\title{Direct label data transform}
\description{Make a function that transforms the data. This is for conveniently
making a function that calls transform on the data frame, with the
arguments provided. See examples.}
\usage{
dl.trans(...)
}
\arguments{
  \item{\dots}{Arguments to pass to transform.}
}
\details{
}
\value{A Positioning Function.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{dlcompare}
\alias{dlcompare}
\title{dlcompare}
\description{Compare several plots and/or label placement methods. This creates
a custom grid graphics display based on lattice and/or ggplot2
output. This is possible because the direct.label function is
generic. The result will be a plot matrix with plots on the
columns and positioning methods on the rows. Names from the lists
will be used to annotate the plot. If label placement method list
elements are not named, but are given as a character string
designating a Positioning Function, we will use this name for the
label.}
\usage{
dlcompare(plots, pos.funs)
}
\arguments{
  \item{plots}{List of ggplot2 or lattice plots.}
  \item{pos.funs}{List of label placement methods to apply to each plot.}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{empty.grid.2}
\alias{empty.grid.2}
\title{empty grid 2}
\description{Use the perpendicular lines method in combination with the empty
grid method.}
\usage{
empty.grid.2(d, debug, ...)
}
\arguments{
  \item{d}{Data frame with columns groups x y.}
  \item{debug}{Show debugging graphics on the plot?}
  \item{\dots}{ignored.}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{empty.grid}
\alias{empty.grid}
\title{empty grid}
\description{Label placement method for scatterplots that ensures labels are
placed in different places. A grid is drawn over the whole
plot. Each cluster is considered in sequence and assigned to the
point on this grid which is closest to the point given by
loc.fun().}
\usage{
empty.grid(d, debug = FALSE, loc.fun = get.means, ...)
}
\arguments{
  \item{d}{Data frame of points on the scatterplot with columns groups x y.}
  \item{debug}{Show debugging info on the plot? This is passed to loc.fun.}
  \item{loc.fun}{Function that takes d and returns a data frame with 1 column for
each group, giving the point we will use to look for a close point
on the grid, to put the group label.}
  \item{\dots}{ignored.}
}
\details{
}
\value{Data frame with columns groups x y, 1 line for each group, giving
the positions on the grid closest to each cluster.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{first.points}
\alias{first.points}
\title{first points}
\description{Positioning Function for the first of a group of points.}
\usage{
first.points(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{get.means}
\alias{get.means}
\title{get means}
\description{Positioning Function for the mean of each cluster of points.}
\usage{
get.means(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{high.points}
\alias{high.points}
\title{high points}
\description{Positioning Function for the top of a group of points.}
\usage{
high.points(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{label.positions}
\alias{label.positions}
\title{label positions}
\description{Calculates table of positions of each label. It does not draw
anything, but is called for its return value. Normally you don't
have to call label.positions explicitly. Instead, it is called for
you by direct.label, for each panel.}
\usage{
label.positions(x, y, subscripts, groups, debug = FALSE, method, ...)
}
\arguments{
  \item{x}{x values of points to draw.}
  \item{y}{y values of points to draw.}
  \item{subscripts}{Subscripts of groups to consider.}
  \item{groups}{Vector of groups.}
  \item{debug}{Show debug output? If TRUE, the resulting table of label positions
will be printed.}
  \item{method}{Method for direct labeling, specified in one of the following
ways: (1) a Positioning Function, (2) the name of a Positioning
Function as a character string, or (3) a list containing any
number of (1), (2), or additionally named values. Starting from
the data frame of points to plot for the panel, the elements of
the list are applied in sequence, and each row of the resulting
data frame is used to draw a direct label. See examples in
?direct.label and ?positioning.functions.}
  \item{\dots}{Passed to Positioning Function(s).}
}
\details{
}
\value{Data frame of direct label positions. Each row describes the
position of 1 label to be drawn later.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{last.points}
\alias{last.points}
\title{last points}
\description{Positioning Function for the last of a group of points.}
\usage{
last.points(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{left.points}
\alias{left.points}
\title{left points}
\description{Positioning Function for the first of a group of points.}
\usage{
left.points(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{lines2}
\alias{lines2}
\title{lines2}
\description{Positioning Function for 2 groups of longitudinal data. One curve
is on top of the other one (on average), so we label the top one
at its maximal point, and the bottom one at its minimal
point. Vertical justification is chosen to minimize collisions
with the other line. This may not work so well for data with high
variability, but then again lineplots may not be the best for
these data either.}
\usage{
lines2(d, offset = 0.3, ...)
}
\arguments{
  \item{d}{The data.}
  \item{offset}{Offset from 0 or 1 for the vjust values.}
  \item{\dots}{ignored.}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{low.points}
\alias{low.points}
\title{low points}
\description{Positioning Function for the bottom of a group of points.}
\usage{
low.points(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{maxvar.points}
\alias{maxvar.points}
\title{maxvar points}
\description{Do first or last, whichever has points most spread out.}
\usage{
maxvar.points(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{need.trans}
\alias{need.trans}
\docType{data}
\title{need trans}
\description{Functions which need translation before applying Positioning Function.}
\usage{need.trans}
\format{
  The format is:
 chr [1:2] "qqmath" "densityplot"
}
\details{
}
\source{
}
\references{
}
\examples{}\name{need.trans.ggplot}
\alias{need.trans.ggplot}
\docType{data}
\title{need trans ggplot}
\description{Geoms which need translation before applying Positioning Function.}
\usage{need.trans.ggplot}
\format{
  The format is:
 chr "density"
}
\details{
}
\source{
}
\references{
}
\examples{}\name{panel.superpose.dl}
\alias{panel.superpose.dl}
\title{panel superpose dl}
\description{Call panel.superpose for the data points and then for the direct
labels. This is a proper lattice panel function that behaves much
like panel.superpose.}
\usage{
panel.superpose.dl(x, y = NULL, subscripts, groups, panel.groups, method = NULL, .panel.superpose = panel.superpose, type = "p", ...)
}
\arguments{
  \item{x}{Vector of x values.}
  \item{y}{Vector of y values.}
  \item{subscripts}{Subscripts of x,y,groups.}
  \item{groups}{Vector of group ids.}
  \item{panel.groups}{To be parsed for default labeling method, and passed to
panel.superpose.}
  \item{method}{Method for direct labeling as described in ?label.positions. NULL
indicates to choose a Positioning Function based on the
panel.groups function.}
  \item{.panel.superpose}{The panel function to use for drawing data points.}
  \item{type}{Plot type, used for default method dispatch.}
  \item{\dots}{Additional arguments to panel.superpose.}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{perpendicular.lines}
\alias{perpendicular.lines}
\title{perpendicular lines}
\description{Draw a line between the centers of each cluster, then draw a
perpendicular line for each cluster that goes through its
center. For each cluster, return the point the lies furthest out
along this line.}
\usage{
perpendicular.lines(d, debug = FALSE, ...)
}
\arguments{
  \item{d}{Data frame with groups x y.}
  \item{debug}{If TRUE will draw points at the center of each cluster and some
lines that show how the points returned were chosen.}
  \item{\dots}{ignored.}
}
\details{
}
\value{Data frame with groups x y, giving the point for each cluster
which is the furthest out along the line drawn through its center.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{position_dl}
\alias{position_dl}
\title{position dl}
\description{Position for internal use with geom_text.}
\usage{
position_dl(method = NULL, debug = FALSE, ...)
}
\arguments{
  \item{method}{
}
  \item{debug}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{right.points}
\alias{right.points}
\title{right points}
\description{Positioning Function for the last of a group of points.}
\usage{
right.points(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{rug.mean}
\alias{rug.mean}
\title{rug mean}
\description{Place points on top of the mean value of the rug.}
\usage{
rug.mean(d, ..., end)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
  \item{end}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{top.points}
\alias{top.points}
\title{top points}
\description{Positioning Function for the top of a group of points.}
\usage{
top.points(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{trans.density}
\alias{trans.density}
\title{trans density}
\description{Transformation function for 1d densityplots.}
\usage{
trans.density(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{trans.densityplot}
\alias{trans.densityplot}
\title{trans densityplot}
\description{Transformation function for 1d densityplots.}
\usage{
trans.densityplot(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{trans.qqmath}
\alias{trans.qqmath}
\title{trans qqmath}
\description{Transformation function for 1d qqmath plots.}
\usage{
trans.qqmath(d, ...)
}
\arguments{
  \item{d}{
}
  \item{\dots}{
}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}Creating directories ...
Creating DESCRIPTION ...
Creating Read-and-delete-me ...
Copying code files ...
Making help files ...
Done.
Further steps are described in './inlinedocs/Read-and-delete-me'.
Modifying files automatically generated by package.skeleton:
decomment: description item{comments} value definition author title
empty.description: definition description author title
extract.docs.file: title description item{code.file} item{write.examples} value definition author
extract.docs.fun: title description item{fun} value definition author
fields: definition description author title
modify.Rd.file: description item{N} item{pkg} item{docs} definition author title
package.skeleton.dx: title description item{pkgdir} item{code_files} item{check} definition author
prefix: definition description author title
inlinedocs-package: title description tabular{ll} author
\name{decomment}
\alias{decomment}
\title{decomment}
\description{Remove comment prefix and join lines of code to form a
documentation string.}
\usage{
decomment(comments)
}
\arguments{
  \item{comments}{Character vector of prefixed comment lines.}
}
\details{
}
\value{String without prefixes or newlines.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\note{
}


\seealso{
}
\examples{}\name{empty.description}
\alias{empty.description}
\docType{data}
\title{empty description}
\description{Default DESCRIPTION, written if it doesn't exist.}
\usage{empty.description}
\format{
  The format is:
 chr [1, 1:7] "" "" "" "" "" "" ""
 - attr(*, "dimnames")=List of 2
  ..$ : NULL
  ..$ : chr [1:7] "Package" "Maintainer" "Author" "Version" ...
}
\details{
}
\source{
}
\references{
}
\examples{}\name{extract.docs.file}
\alias{extract.docs.file}
\title{Extract documentation from a file}
\description{Parse an R code file and extract inline documentation from
comments around each function.}
\usage{
extract.docs.file(code.file, write.examples = TRUE)
}
\arguments{
  \item{code.file}{The R code file to parse.}
  \item{write.examples}{Gather examples from test files?}
}
\details{
}
\value{named list of lists. Each element is the result of a call to
extract.docs.fun, with names corresponding to functions found in
the R code file.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\note{
}


\seealso{
}
\examples{}\name{extract.docs.fun}
\alias{extract.docs.fun}
\title{Extract documentation from a function}
\description{Given a function, return a list describing inline documentation in
the source of that function (relies on source attr).}
\usage{
extract.docs.fun(fun)
}
\arguments{
  \item{fun}{The function to examine.}
}
\details{
}
\value{Named list of character strings extracted from comments. For each
name N we will look for N\{...\} in the Rd file and replace it
with the string in this list (implemented in modify.Rd.file).}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\note{
}


\seealso{
}
\examples{}\name{fields}
\alias{fields}
\docType{data}
\title{fields}
\description{Necessary fields in DESCRIPTION, otherwise error.}
\usage{fields}
\format{
  The format is:
 chr [1:7] "Package" "Maintainer" "Author" "Version" "License" ...
}
\details{
}
\source{
}
\references{
}
\examples{}\name{inlinedocs-package}
\alias{inlinedocs-package}
\docType{package}
\title{Convert inline comments to documentation}
\description{Generates Rd files from R source code with comments, providing for quick, sustainable package development. The syntax keeps code and documentation close together, and is inspired by the Don't Repeat Yourself principle.}
\details{
\tabular{ll}{Package: \tab inlinedocs\cr
Title: \tab Convert inline comments to documentation\cr
Type: \tab Package\cr
Version: \tab 1.0\cr
Date: \tab 2009-07-29\cr
Author: \tab Toby Dylan Hocking\cr
Maintainer: \tab Toby Dylan Hocking <toby.hocking@etu.upmc.fr>\cr
URL: \tab http://inlinedocs.r-forge.r-project.org\cr
License: \tab GPL-3\cr
LazyLoad: \tab yes\cr}
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\references{
}
\keyword{ package }
\seealso{
}
\examples{}\name{modify.Rd.file}
\alias{modify.Rd.file}
\title{modify Rd file}
\description{Add inline documentation from comments to an Rd file
automatically-generated by package.skeleton.}
\usage{
modify.Rd.file(N, pkg, docs)
}
\arguments{
  \item{N}{Name of function/file to which we will add documentation.}
  \item{pkg}{Package name.}
  \item{docs}{Named list of documentation in extracted comments.}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\note{
}


\seealso{
}
\examples{}\name{package.skeleton.dx}
\alias{package.skeleton.dx}
\title{Package skeleton deluxe}
\description{Automates more of the setup process for a new source
package. After inspecting the specified R code files to find
inline documentation, it calls the standard package.skeleton
function, which creates bare Rd files. The inline documentation is
added to these Rd files and then these files are copied to
../man. It will overwrite files in the pkgdir/man directory.}
\usage{
package.skeleton.dx(pkgdir = "..", code_files = NULL, check = "")
}
\arguments{
  \item{pkgdir}{package directory where the DESCRIPTION file lives. Your code
should be in pkgdir/R. We will setwd to pkgdir/R for the duration
of the function, then switch back to where you were previously.}
  \item{code_files}{Character vector with the names of the R code files, to be passed
to package.skeleton, and also inspected for inline
documentation. NULL means all files ending in .R.}
  \item{check}{Value indicating whether or not to check the package after
documentation is built. Anything other than "" (the default) will
check the package. "noex" means check the package without running
examples, only tests (useful for debugging if your tests/examples
take a long time).}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\note{
}


\seealso{
}
\examples{}\name{prefix}
\alias{prefix}
\docType{data}
\title{prefix}
\description{Prefix for code comments used with grep and gsub.}
\usage{prefix}
\format{
  The format is:
 chr "^### "
}
\details{
}
\source{
}
\references{
}
\examples{}Creating directories ...
Creating DESCRIPTION ...
Creating Read-and-delete-me ...
Copying code files ...
Making help files ...
Done.
Further steps are described in './inlinedocs/Read-and-delete-me'.
Modifying files automatically generated by package.skeleton:
decomment: description item{comments} value definition author title
empty.description: definition description author title
extract.docs.file: title description item{code.file} item{write.examples} value definition author
extract.docs.fun: title description item{fun} value details note keyword definition author
fields: definition description author title
modify.Rd.file: description item{N} item{pkg} item{docs} definition author title
package.skeleton.dx: title description item{pkgdir} item{code_files} item{check} definition author
prefix: definition description author title
inlinedocs-package: title description tabular{ll} author
\name{decomment}
\alias{decomment}
\title{decomment}
\description{Remove comment prefix and join lines of code to form a
documentation string.}
\usage{
decomment(comments)
}
\arguments{
  \item{comments}{Character vector of prefixed comment lines.}
}
\details{
}
\value{String without prefixes or newlines.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\note{
}


\seealso{
}
\examples{}\name{empty.description}
\alias{empty.description}
\docType{data}
\title{empty description}
\description{Default DESCRIPTION, written if it doesn't exist.}
\usage{empty.description}
\format{
  The format is:
 chr [1, 1:7] "" "" "" "" "" "" ""
 - attr(*, "dimnames")=List of 2
  ..$ : NULL
  ..$ : chr [1:7] "Package" "Maintainer" "Author" "Version" ...
}
\details{
}
\source{
}
\references{
}
\examples{}\name{extract.docs.file}
\alias{extract.docs.file}
\title{Extract documentation from a file}
\description{Parse an R code file and extract inline documentation from
comments around each function.}
\usage{
extract.docs.file(code.file, write.examples = TRUE)
}
\arguments{
  \item{code.file}{The R code file to parse.}
  \item{write.examples}{Gather examples from test files?}
}
\details{
}
\value{named list of lists. Each element is the result of a call to
extract.docs.fun, with names corresponding to functions found in
the R code file.}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\note{
}


\seealso{
}
\examples{}\name{extract.docs.fun}
\alias{extract.docs.fun}
\title{Extract documentation from a function}
\description{Given a function, return a list describing inline documentation in
the source of that function (relies on source attr).}
\usage{
extract.docs.fun(fun)
}
\arguments{
  \item{fun}{The function to examine.}
}
\details{For simple functions/arguments, the argument may also be documented by
appending ##<< comments on the same line as the argument. For those who
wish to become confused, any following ### comment lines will be appended.

Additionally, contiguous sections of ## comment lines beginning with
xxx<< (where xxx is one of the "other" fields: alias, details, keyword,
references, author, note, seealso or value) are accumulated and inserted in
the relevant part of the .Rd file.

In the case of value, the extra information is appended to that from
any final ### comment lines.

Each separate extra section appears as a new paragraph
except that empty sections (no matter how many lines) are ignored.}
\value{Named list of character strings extracted from comments. For each
name N we will look for N\{...\} in the Rd file and replace it
with the string in this list (implemented in modify.Rd.file).}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\note{Alias extras are automatically split at new lines.

Keyword extras are auto-split at white space.}


\seealso{
}
\examples{}

\keyword{documentation}
\keyword{utilities}\name{fields}
\alias{fields}
\docType{data}
\title{fields}
\description{Necessary fields in DESCRIPTION, otherwise error.}
\usage{fields}
\format{
  The format is:
 chr [1:7] "Package" "Maintainer" "Author" "Version" "License" ...
}
\details{
}
\source{
}
\references{
}
\examples{}\name{inlinedocs-package}
\alias{inlinedocs-package}
\docType{package}
\title{Convert inline comments to documentation}
\description{Generates Rd files from R source code with comments, providing for quick, sustainable package development. The syntax keeps code and documentation close together, and is inspired by the Don't Repeat Yourself principle.}
\details{
\tabular{ll}{Package: \tab inlinedocs\cr
Title: \tab Convert inline comments to documentation\cr
Type: \tab Package\cr
Version: \tab 1.0\cr
Date: \tab 2009-07-29\cr
Author: \tab Toby Dylan Hocking\cr
Maintainer: \tab Toby Dylan Hocking <toby.hocking@etu.upmc.fr>\cr
URL: \tab http://inlinedocs.r-forge.r-project.org\cr
License: \tab GPL-3\cr
LazyLoad: \tab yes\cr}
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\references{
}
\keyword{ package }
\seealso{
}
\examples{}\name{modify.Rd.file}
\alias{modify.Rd.file}
\title{modify Rd file}
\description{Add inline documentation from comments to an Rd file
automatically-generated by package.skeleton.}
\usage{
modify.Rd.file(N, pkg, docs)
}
\arguments{
  \item{N}{Name of function/file to which we will add documentation.}
  \item{pkg}{Package name.}
  \item{docs}{Named list of documentation in extracted comments.}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\note{
}


\seealso{
}
\examples{}\name{package.skeleton.dx}
\alias{package.skeleton.dx}
\title{Package skeleton deluxe}
\description{Automates more of the setup process for a new source
package. After inspecting the specified R code files to find
inline documentation, it calls the standard package.skeleton
function, which creates bare Rd files. The inline documentation is
added to these Rd files and then these files are copied to
../man. It will overwrite files in the pkgdir/man directory.}
\usage{
package.skeleton.dx(pkgdir = "..", code_files = NULL, check = "")
}
\arguments{
  \item{pkgdir}{package directory where the DESCRIPTION file lives. Your code
should be in pkgdir/R. We will setwd to pkgdir/R for the duration
of the function, then switch back to where you were previously.}
  \item{code_files}{Character vector with the names of the R code files, to be passed
to package.skeleton, and also inspected for inline
documentation. NULL means all files ending in .R.}
  \item{check}{Value indicating whether or not to check the package after
documentation is built. Anything other than "" (the default) will
check the package. "noex" means check the package without running
examples, only tests (useful for debugging if your tests/examples
take a long time).}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@etu.upmc.fr>}
\note{
}


\seealso{
}
\examples{}\name{prefix}
\alias{prefix}
\docType{data}
\title{prefix}
\description{Prefix for code comments used with grep and gsub.}
\usage{prefix}
\format{
  The format is:
 chr "^### "
}
\details{
}
\source{
}
\references{
}
\examples{}Creating directories ...
Creating DESCRIPTION ...
Creating Read-and-delete-me ...
Copying code files ...
Making help files ...
Done.
Further steps are described in './silly/Read-and-delete-me'.
Modifying files automatically generated by package.skeleton:
silly.example: description value title \item{first} \item{second} \item{third} details alias note references seealso keyword definition author
Silly-class: title description details \item{forwards} \item{reverse} \item{crashes} section{Objects from the Class} seealso alias author
silly-package: title description tabular{ll} author
\name{Silly-class}
\Rdversion{1.1}
\docType{class}
\alias{Silly-class}
\alias{Silly}
\alias{show,Silly-method}

\title{S4 classes can be documented as well}
\description{The Silly class does nothing much either}
\section{Objects from the Class}{Put what you like in documentation details,
but ideally reference construction methods.}
\section{Slots}{
  \describe{
    \item{\code{forwards}:}{(\code{function}) forward operation}
    \item{\code{reverse}:}{(\code{function}) how to go backward}
    \item{\code{crashes}:}{(\code{integer}) how many crashes}
  }
}
\section{Methods}{
  \describe{
    \item{show}{\code{signature(object = "Silly")}: ... }
	 }
}
\references{}
\author{Keith Ponting <k.ponting@aurix.com>}
\note{}



\seealso{}
\examples{}\name{show-methods}
\docType{methods}
\alias{show-methods}
\alias{show,Silly-method}
\title{ ~~ Methods for Function show  ~~}
\description{
 ~~ Methods for function \code{show}  ~~
}
\section{Methods}{
\describe{

\item{\code{signature(object = "Silly")}}{ ~~describe this method here }
}}
\keyword{methods}
\keyword{ ~~ other possible keyword(s)}\name{silly-package}
\alias{silly-package}
\docType{package}
\title{Exhaustive example of inlinedocs extended tags}
\description{Attempt to exercise many variants of the extended ##<< tags for inline docs.}
\details{
\tabular{ll}{Package: \tab silly\cr
Title: \tab Exhaustive example of inlinedocs extended tags\cr
Type: \tab Package\cr
Version: \tab 1.0\cr
Date: \tab 2009-11-12\cr
Author: \tab Keith Ponting\cr
Maintainer: \tab Keith Ponting <k.ponting@aurix.com>\cr
URL: \tab http://inlinedocs.r-forge.r-project.org\cr
License: \tab GPL-3\cr
LazyLoad: \tab yes\cr}
}
\author{Keith Ponting <k.ponting@aurix.com>}
\references{
}
\keyword{ package }
\seealso{
}
\examples{}\name{silly.example}
\alias{silly.example}
\alias{Long silly alias}
\title{Simple function arguments}
\description{this function does nothing in particular and does it very well
why should I add to description?}
\usage{
silly.example(first, second = list(this = "that", the = "other", rhubarb = "stew", foo = "bar"), third)
}
\arguments{
  \item{first}{the first argument with a multi-line description
which I really have to put here rather than explaining in the details.}
  \item{second}{the second argument with a list default value
and descriptions of each of the elements\describe{
\item{this}{whichness}
\item{the}{of the}
\item{rhubarb}{why}
}}
  \item{third}{an argument that does nothing}
}
\details{if second is TRUE then first is returned

if second is not TRUE then a list is returned

The contents of the list are:\describe{
\item{x}{x coordinate}
\item{z}{z describes everything else\describe{
\item{colour}{colour of line}
\item{width}{width of line}
}
and this line should get into documentation for z}
\item{y}{y coordinate}
}}
\value{invisible something not unrelated to first}
\references{a reference}
\author{Keith Ponting <k.ponting@aurix.com>}
\note{a note}


\seealso{\code{\link{test}}}
\examples{}

\keyword{documentation}
\keyword{utilities}Loading required package: XML
Creating directories ...
Creating DESCRIPTION ...
Creating Read-and-delete-me ...
Copying code files ...
Making help files ...
Done.
Further steps are described in './sublogo/Read-and-delete-me'.
Modifying files automatically generated by package.skeleton:
dna.identity: definition description author title
dna.letters: definition description author title
make.logo.ps: description item{helices} item{psbase} value definition author title
read.fasta: description item{infile} definition author title
seqs.to.mat: description item{seq.vec} item{subs.mat} value definition author title
sublogo: description item{seqs} item{mat} item{\dots} definition author title
sublogo.dendrogram: description item{M} item{main} item{subtit} item{base} item{cutline} item{dend.width} item{cex} value definition author title
sublogo-package: title description tabular{ll} author
\name{dna.identity}
\alias{dna.identity}
\docType{data}
\title{dna identity}
\description{DNA identity substitution matrix.}
\usage{dna.identity}
\format{
  The format is:
 num [1:5, 1:5] 0 0 0 0 0 0 1 0 0 0 ...
 - attr(*, "dimnames")=List of 2
  ..$ : chr [1:5] "*" "A" "T" "G" ...
  ..$ : chr [1:5] "*" "A" "T" "G" ...
}
\details{
}
\source{
}
\references{
}
\examples{}\name{dna.letters}
\alias{dna.letters}
\docType{data}
\title{dna letters}
\description{Letters in the DNA alphabet, used to auto-detect sequence type}
\usage{dna.letters}
\format{
  The format is:
 chr [1:5] "*" "A" "T" "G" "C"
}
\details{
}
\source{
}
\references{
}
\examples{}\name{make.logo.ps}
\alias{make.logo.ps}
\title{make logo ps}
\description{Create a logo using weblogo, then read it in using grImport}
\usage{
make.logo.ps(helices, psbase)
}
\arguments{
  \item{helices}{Sequences to plot in the logo}
  \item{psbase}{Base filename for the logo postscript and xml files, should be the
full path name except for the trailing .ps}
}
\details{
}
\value{Grid picture grob as read using readPicture}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{read.fasta}
\alias{read.fasta}
\title{read fasta}
\description{Read sequences in FASTA format into a named character vector}
\usage{
read.fasta(infile)
}
\arguments{
  \item{infile}{Name of the sequence file}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{seqs.to.mat}
\alias{seqs.to.mat}
\title{seqs to mat}
\description{Calculate pairwise differences between sequences using a
substitution matrix.}
\usage{
seqs.to.mat(seq.vec, subs.mat = NULL)
}
\arguments{
  \item{seq.vec}{DNA or protein sequences.}
  \item{subs.mat}{Substitution matrix with dimnames that match the letters used in
the sequence data, or a character vector that specifies a common
substitution matrix (as defined in the Biostrings package). NULL
specifies that we will guess a suitable substitution matrix to
match your input sequences (DNA=>identity, protein=>BLOSUM62).}
}
\details{
}
\value{The matrix of distances between each input sequence, with dimnames
corresponding to either the sequences, or the sequence names (if
they exist)}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{sublogo-package}
\alias{sublogo-package}
\docType{package}
\title{Sublogo dendrogram plots}
\description{Visualize correlation in biological sequence data using sublogo dendrogram plots.}
\details{
\tabular{ll}{Package: \tab sublogo\cr
Type: \tab Package\cr
Title: \tab Sublogo dendrogram plots\cr
Version: \tab 1.0\cr
Date: \tab 2009-06-19\cr
Author: \tab Toby Dylan Hocking\cr
Maintainer: \tab Toby Dylan Hocking <toby.hocking@inria.fr>\cr
Depends: \tab R (>= 2.3.0), grImport, gridBase, Biostrings\cr
URL: \tab http://sublogo.r-forge.r-project.org\cr
License: \tab GPL-3\cr
LazyLoad: \tab yes\cr}
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\references{
}
\keyword{ package }
\seealso{
}
\examples{}\name{sublogo}
\alias{sublogo}
\title{sublogo}
\description{Draw a sublogo dendrogram for a sequence motif.}
\usage{
sublogo(seqs, mat = NULL, ...)
}
\arguments{
  \item{seqs}{Character vector of DNA or protein sequences (optionally named
with sequence labels).}
  \item{mat}{Substitution matrix passed to seqs.to.mat.}
  \item{\dots}{Other arguments to pass to sublogo.dendrogram (see that help page
for a full description).}
}
\details{
}
\value{
}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}\name{sublogo.dendrogram}
\alias{sublogo.dendrogram}
\title{sublogo dendrogram}
\description{Main function for drawing sublogo dendrograms.}
\usage{
sublogo.dendrogram(M, main = "", subtit = NULL, base = tempfile(), cutline = 150, dend.width = 30, cex = 1)
}
\arguments{
  \item{M}{difference matrix as constructed by seqs.to.mat (although in
principle any object with a valid as.dist method could be used)}
  \item{main}{plot title}
  \item{subtit}{plot subtitle}
  \item{base}{base file name for temporary logo files}
  \item{cutline}{Distance for cutting the tree. Draw a sublogo for each
leaf. Normally you will plot once, then inspect the dendrogram to
determine which is a good value for cutline, then plot again using
your chosen cutline.}
  \item{dend.width}{Percent of the plot to be occupied by the dendrogram. The logos
will be displayed with equal widths on either side.}
  \item{cex}{character expansion factor for the dendrogram}
}
\details{
}
\value{The dendrogram from the call to hclust}
\references{
}
\author{Toby Dylan Hocking <toby.hocking@inria.fr>}
\note{
}


\seealso{
}
\examples{}> 
