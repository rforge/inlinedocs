== TODO

Attempt doc list to Rd list conversion, so we can generate Rd using
tools:::print.Rd. See code in etc/parseRd.R

== 1.6

Fix warining when S4 classes are defined in package code, by setting
the .packageName variable in the env in apply.parsers, so we don't get
this warning anymore

Warning in getPackageName(where) :
  Created a package name, "2011-04-07 15:29:30", when none found

== 1.5.1

Bugfix for S4 classes by setting the globalenv in apply.parsers to the
env where we eval the pkg code. We were getting this error

Error in assign(mname, def, where) : 
  cannot add bindings to a locked environment

== 1.5

Check to make sure we are not extracting too many documentation
objects, relative to the stored .result in unit tests.

.names such as .s3method and .overwrite in inner documentation lists
are ignored for find/replacement.

.overwrite signals that all other items of the list should be used
when combining, ignoring previous values stored in those slots.

##sections<< permitted immediately after ###return value

Report which of the users' documentation objects we failed on if the
Parser Function in forall stops with an error.

bugfix: for paren matching heuristic in prefixed.lines Parser
Function, do not consider parens in comments.

extended unit tests: now every testfile is assembled into a package
that will be checked using R CMD check. If there are any warnings,
then we will stop with an error. this poses problems for testfiles
with extensive dependencies and references (such as
scatterplot.R). For these, just set the .dontcheck variable in the
testfile.

== 1.4 unit tests for Parser Functions using inst/testfiles/*.R and
the .result variable in each. we check first if all contents of
.result are correctly extracted, then we check to make sure nothing
more is extracted. This should ensure API stability.

== 1.3 Bug fixes and new code contributed by Ph. Grosjean
  
* examples.after.return is modified to detect where examples start using a
  specific mark (either ##examples<<, or #{{{examples). This way, it does not
  get trap with multiple return() in the function, or the presence of a
  return() in the examples

* examples.in.attr parser is added. It look at an "ex" attribute containing
  code of the examples, either as a character string, or as a function.
  
* Added dependence to 'utils' package (for things like package.skeleton())

* Added the possibility to build a NAMESPACE (argument namespace in
  package.skeleton.dx()). A NAMESPACE is also added to the inlinedocs package.
  
* When DESCRIPTION file is empty, fill required fields with reasonable values,
  e.g., Package: with the same name as dir, Version: 1.0-0, etc.
  
* Automatic detection of S3 methods added, and correct formatting of usage and
  addition of entries in NAMESPACE as required.
  
* Reformatting of special cases usages, like fun<-(x, value) => fun(x) <- value,
  met<-.obj(x, ..., value) => method{met}{obj}(x, ...) <= value, and
  %op%(e1, e2) <- e1 %op% e2
  
* Now the packages in the imports field are considered too, as well for building
  the NAMESPACE file
  
* If there is an 'encoding' field in DESCRIPTION, it is now taken into account
  (according to Writing R Extensions manual, it applies to to R code)!
  
* There is now the possbility to place external examples elsewhere
  that in /tests. Just indicate the subdirectory wher you place them
  in options(inlinedocs.exdir = "exsubsir")

* The names of .Rd files was not computed correctly when functions
  with names like `obj<-`, or `%op%`. Corrected.
  
* The presence of platform specific code in /R/unix or /R/windows is
  not supported by inlinedocs (currnetly). However, this was ignored
  silently. Now, package.skeleton.dx() stops process when it find one
  of these subdirs.
  
* A couple of error messages where badly formatted when they included several
  items like in stop("Need ",names(f)[f]," in ",descfile). Corrected.
  
* Wrong extraction of package names form 'Depends' field in case where packages
  contain one or more dots in their names. Corrected.

* It is necessary to eliminate 'R' from the list of packages to load from
  'Depends' field. Corrected.

* package.skeleton.dx() tried to load packages already laoded, and failed to
  unload packages (including their namespaces, if possible) that where not
  loaded before exiting. Corrected.

== 1.2 new code contributions from thomas, extension mechanism using
Parser Function list

== 1.1 
fixed ... argument bug

== 1.0 

