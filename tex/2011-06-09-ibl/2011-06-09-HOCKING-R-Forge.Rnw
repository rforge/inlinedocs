% -*- mode: noweb; noweb-default-code-mode: R-mode -*-
\documentclass{beamer}
\usepackage{graphicx}
\usepackage{hyperref}
\usepackage{tikz}
\SweaveOpts{echo=FALSE,width=4.5,height=3.5}
  
% Some problems encountered when using pgfSweave... 1. Some old
% versions of certain R packages gave an error Graphics API version
% mismatch. Solution: update.packages(checkBuilt=TRUE,ask=FALSE)
% 2. need to \usepackage{tikz} in the header and process on the
% command line with pgfsweave test.Rnw or in R with
% library(pgfSweave);pgfSweave("test.Rnw",pdf=TRUE). 3. Try to get the
% simple example in
% http://cran.at.r-project.org/web/packages/pgfSweave/vignettes/pgfSweave.pdf
% to work before anything else. 4. ERROR PGF >= 2.10 is required to
% use pgfSweave, you are using version 2.00.... NEED to install
% https://help.ubuntu.com/community/LaTeX#Add%20on%20packages ...
% cd && mkdir texmf && cp -r pgf/tex texmf && texhash texmf .....
% then finally do R CMD pgfsweave test.Rnw 5. There seems to be some
% problems with Emacs setting up the environment. when I launch emacs
% from .xsession it is unable to find the R user library, so it can't
% find the tikz/pgfsweave packages. how to fix? put . ~/.bashrc into
% .xsession.

<<>>=
.libPaths(c("~/lib64/R/library", .libPaths()))
@

\title{Collaborative R package development using\\
  \url{http://R-Forge.R-Project.org/}}
\author{Toby Dylan Hocking \\ toby.hocking AT inria.fr}
\date{9 June 2011}

\AtBeginSection[]
{
  \begin{frame}<beamer>
    \frametitle{Outline}
    \tableofcontents[currentsection]
  \end{frame}
}

\AtBeginSubsection[]
{
  \begin{frame}<beamer>
    \frametitle{Outline}
    \tableofcontents[currentsection,currentsubsection]
  \end{frame}
}
\newcommand{\framet}[2]{\frame[containsverbatim]{
\begin{itemize}
\frametitle{#1}{#2}
\end{itemize}
}}

\begin{document}
\setkeys{Gin}{width=\textwidth}
\frame{\titlepage}

\section{R-Forge: democratizing the R development model}
\newcommand{\coreforge}[3]{
         & \textbf{#1}\\
   \visible<1-2>{R-Core & #2}\\
   \invisible<1>{R-Forge &  #3}\\
   }
\begin{frame}
\frametitle{How do the R-Core developers manage their code?}
\begin{tabular}{ll}
  \coreforge{Public web site}{http://www.r-project.org}{
    http://pkg.r-forge.r-project.org}
  \hline
  \coreforge{Email lists for user support}{r-help@r-project.org}{
    pkg-help@lists.r-forge.r-project.org}
  \hline
  \coreforge{Bug tracking web site}{https://bugs.r-project.org}{
    http://r-forge.r-project.org/tracker/?group\_id=496}
  \hline
  \coreforge{Public Subversion access}{http://svn.r-project.org/R/trunk}{
    svn://svn.r-forge.r-project.org/svnroot/pkg}
  \hline
  \coreforge{Developer Subversion access}{
    https://dev@svn.r-project.org/R/trunk}{
    svn+ssh://dev@svn.r-forge.r-project.org/svnroot/pkg}
\end{tabular}
\end{frame}

\begin{frame} \frametitle{R-Forge is like other code hosting services,
    and is tailored for R package developers}
  \begin{itemize}
    \item Like GitHub, BitBucket, Google Code, SourceForge...
      \begin{itemize}
      \item Web-based project administration of email lists, bug
        tracker, ...
      \item Subversion for source code and website management.
      \item Everything backed up, so you don't have to worry about it!
      \item Access to your code from any internet-connected computer.
      \end{itemize}
    \item But with features specific to R packages:
      \begin{itemize}
      \item Daily checking and building/compilation of packages on the
        R-Forge server.
      \item CRAN-style web repository from which you can download
        packages:\\
        \texttt{install.packages("inlinedocs",\\
          repos="http://R-Forge.R-Project.org")}
      \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}
  \frametitle{The R-Forge Administration and Development Team}
  \begin{small}
  Source: R-Forge User's Manual SVN Revision 210, February 15, 2011\\
  \url{http://www.wu.ac.at/statmath/faculty_staff/faculty/khornik}\\
  \url{http://wi.wu-wien.ac.at/mis/pages/en/team}\\
  \url{http://statmath.wu.ac.at/~theussl/}\\
  \url{http://statmath.wu.ac.at/~zeileis/}
  \end{small}
  \begin{tabular}{cccc}
    \includegraphics[width=1in]{hornik}&
    \includegraphics[width=1in]{meyer}&
    \includegraphics[width=1in]{theussl}&
    \includegraphics[width=1in]{zeileis}\\
    Kurt Hornik&
    David Meyer&
    Stefan Theu\ss l &
    Achim Zeileis 
  \end{tabular}
\end{frame}

\begin{frame}
  \frametitle{R-Forge is becoming the hub of R package development}
<<fig=TRUE,tikz=TRUE,height=3>>=
sorted.projects <- read.csv("project.stats.csv",header=TRUE, 
                            colClasses=c("POSIXct","factor","integer"))
sorted.projects$count <- 1:nrow(sorted.projects)
par(mar=c(3,4,2,3))
plot(count~registered,sorted.projects,type="s",las=1,
     xlab="",
     ylab="Total number of projects on R-Forge")
last.line <- tail(sorted.projects,1)
last.date <- last.line$registered
user2008 <- as.POSIXct("2008-08-13")
yhat <- with(sorted.projects,approx(registered,count,user2008))$y
points(user2008,yhat,pch=20)
text(user2008,yhat,"R-Forge announcement\nat useR 2008",adj=c(-0.1,1.1))
axis(3,last.date,format(last.date,"%e %B %Y"))
axis(4,last.line$count,las=1)
@ 
{\small Source: R-Forge project web pages.}
\end{frame}
  
\section{Uploading code and a project web page using Subversion}

\begin{frame} \frametitle{Registering yourself and a project on
    R-Forge}
  \begin{itemize}
  \item First create a free account:\\
    {\small\url{https://r-forge.r-project.org/account/register.php}}\\
    For example, \textbf{dev}
  \item Then ask for a new project:\\
    {\small\url{https://r-forge.r-project.org/register/projectinfo.php}}\\
    For example, \textbf{proj}
  \end{itemize}
\end{frame}

\begin{frame}
  \frametitle{Checking out an R-Forge project onto your local computer}
  \begin{itemize}
  \item Do this only once for each local computer.
  \item It will download a working copy to the
    \texttt{proj} directory.
  \item {\scriptsize\texttt{svn checkout
        svn+ssh://}\textbf{dev}\texttt{@svn.r-forge.r-project.org/svnroot/}\textbf{proj}}
  \item Or use the Windows GUI Subversion client: right click,
    TortoiseSVN, Checkout...
  \item This gives you
      \begin{itemize}
      \item \textbf{proj}\texttt{/pkg} for an R package, built once
        per day.
      \item \textbf{proj}\texttt{/www} for a PHP or HTML project web
        site, updated once per hour:
        \texttt{http://}\textbf{proj}\texttt{.r-forge.r-project.org}
      \item You can add whatever other text files and folders you like.
      \item Example: \textbf{proj}\texttt{/tex} for \LaTeX\ articles or
        presentations.
      \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame} \frametitle{Windows TortoiseSVN: icon overlays display
    the version control state, like \texttt{svn status}}
  \url{http://tortoisesvn.net/downloads.html}
  \includegraphics{Overlays}
  {\scriptsize \\Image from\\ 
    \url{http://tortoisesvn.net/docs/release/TortoiseSVN_en/tsvn-dug.html}}
\end{frame}

\begin{frame} \frametitle{Daily Subversion commands with an R-Forge
    project}
  \begin{itemize}
    \item \texttt{svn add file.R} to start tracking changes on
      \texttt{file.R}.
    \item \texttt{svn commit -m 'fixed the plotting bug'} to upload
      changes to the R-Forge server.
    \item \texttt{svn status} to list the files that have changed
      since the last commit.
    \item \texttt{svn diff} to show the lines which have changed since
      the last commit.
    \item \texttt{svn update} to download the most recent code from the
      R-Forge server.
  \end{itemize}
\end{frame}

\begin{frame} \frametitle{Windows TortoiseSVN: clicking menu items
    performs Subversion commands}
  \includegraphics[height=0.7\textheight,keepaspectratio]{ContextMenuDirControl}
  {\scriptsize \\Image from\\ 
    \url{http://tortoisesvn.net/docs/release/TortoiseSVN_en/tsvn-dug.html}}
\end{frame}

\begin{frame} \frametitle{Subversion allows multiple authors to
    simultaneously edit the same file}
  \includegraphics[width=\textwidth]{svn-1}
  \begin{itemize}
  \item \texttt{svn checkout} is performed once per client
    computer. It downloads the project code from the R-Forge server.
  \item \texttt{svn commit} is performed every time you want to upload
    changes to the server.
  \end{itemize}
  
  {\scriptsize Images adapted from\\
    \url{http://svnbook.red-bean.com/en/1.5/svn.basic.vsn-models.html}}
\end{frame}

\begin{frame} \frametitle{Subversion automatically merges* changes
    from each author together}
  \texttt{svn update}
  
  \includegraphics[width=\textwidth]{svn-2}
  
  Second panel ``A new merged version is created''
  \begin{itemize}
  \item \textbf{merGe \texttt{G}}: if Harry and Sally edited different
    parts of the file, then they are automatically merged into $A^*$.
  \item \textbf{Conflict \texttt{C}}: otherwise, Harry must manually
    decide how to combine the conflicting changes to form $A^*$.
  \end{itemize}
  
  {\scriptsize Images adapted from\\
    \url{http://svnbook.red-bean.com/en/1.5/svn.basic.vsn-models.html}}
\end{frame}

\begin{frame}[containsverbatim]
\begin{minipage}{2in}
  Most collaborative projects
  
 \begin{small}
<<echo=FALSE,results=tex>>=
if(!file.exists("project.users.csv"))download.file("http://r-forge.r-project.org/scm/viewvc.php/*checkout*/tex/2011-06-09-ibl/project.users.csv?root=inlinedocs","project.users.csv")
users <- read.csv("project.users.csv",header=TRUE,
                  colClasses=c("factor","factor"))
users.per.project <- sort(table(users$project))
freq <- rev(table(users.per.project))
Developers <- rev(users.per.project)[1:nrow(freq)]
Project <- names(Developers)
last.dev <- tail(Developers,1)
last.shown <- sum(last.dev==Developers)
if(freq[as.character(last.dev)] > last.shown){
  toedit <- which(Developers==8)
  Developers[toedit] <- "."
  Project[toedit] <- "."
}
library(xtable)
xt <- xtable(data.frame(Project,Developers),align="rlr")
print(xt,floating=FALSE,sanitize.text.function=identity,include.rownames=FALSE)
@ 
\end{small}
\end{minipage}
\begin{minipage}{1.5in}
  All projects
  
  \begin{small}
<<echo=FALSE,results=tex>>=
last.dev <- tail(Developers[-toedit],1)
toadd <- which(last.dev==names(freq))+1
names(freq)[toadd] <- paste("\\hline",names(freq)[toadd])
ft <- data.frame(Developers=names(freq),`Number of projects`=freq,
                 check.names=FALSE)
xt <- xtable(ft,align="rrr")
print(xt,floating=FALSE,sanitize.text.function=identity,include.rownames=FALSE)
@ 
\end{small}
\end{minipage}

Source: R-Forge project web pages.
\end{frame}

\begin{frame} \frametitle{More infrequently used or complicated
    Subversion commands}
  \begin{itemize}
  \item Infrequently used commands:
    \begin{itemize}
  \item \texttt{svn cp}, \texttt{svn mv}, \texttt{svn mkdir} for
    versioned copying, moving, or making directories.
  \item \texttt{svn up -r 35} to download code version 35 from the
    R-Forge server.
  \end{itemize}
  \item \texttt{svn resolve} to manually resolve conflicts.
\item Complicated, see the Subversion manual for details:
  \begin{itemize}
  \item \texttt{svn merge} to revert back to a previous version of
    code, or merge with another branch.
  \end{itemize}
  \end{itemize}
\end{frame}

\section{Caveats and references}

\begin{frame}
  \frametitle{What R-Forge is NOT}
  \begin{description}
  \item[NOT unlimited storage.] There is currently no imposed limit on
    SVN repository size. However, if projects begin to abuse disk
    space, R-Forge will impose a limit. In particular, \textbf{do not
      put binary files in SVN}. Exception: very small or very
    infrequently updated files, like images for a project website.
  \item[NOT instantaneous package builds.] When you check code into
    SVN, it is NOT immediately compiled on their server. In fact, the
    build and check process occurs only once per night.
  \end{description}
\end{frame}

\framet{Learning more about collaborative R package development}{
  \item \url{http://R-Forge.R-project.org}
    \begin{itemize}
\item 6 page introduction PDF:
  \href{http://download.r-forge.r-project.org/RJournal_2009-1_Theussl+Zeileis.pdf}{Stefan
    Theu\ss l and Achim Zeileis. Collaborative software development using
    R-Forge. The R Journal, 1(1):9-14, May 2009}.
\item 10 page user's manual PDF:
  \href{http://r-forge.r-project.org/R-Forge_Manual.pdf}{detailed
    technical documentation}.
\item Email R-Forge@R-Project.org
\end{itemize}
\item Subversion -- translations available!
  \begin{itemize}
  \item Version Control with Subversion: \url{http://svnbook.red-bean.com/}
  \item Windows GUI documentation: \url{http://tortoisesvn.net/support.html}
  \end{itemize}
\item Contact me directly: toby.hocking AT inria.fr,
  \url{http://cbio.ensmp.fr/~thocking/}
}

\end{document}
